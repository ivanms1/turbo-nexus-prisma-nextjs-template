### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  author: User!
  content: String!
  createdAt: DateTime!
  id: ID!
  isPublished: Boolean!
  lead: String!
  preview: String!
  tags: [String!]!
  title: String!
  updatedAt: DateTime!
}

type ArticlesResponse {
  nextCursor: String
  prevCursor: String
  results: [Article!]!
  totalCount: Int
}

input CreateArticleInput {
  content: String!
  description: String!
  lead: String!
  preview: String!
  tags: [String!]
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createArticle(input: CreateArticleInput): Article
  deleteArticle(id: ID!): String
  deleteManyArticles(ids: [ID!]!): JSONObject
  signup(avatar: String!, email: String!, name: String!): JSONObject!

  """Change an article status"""
  updateArticleStatus(isPublished: Boolean!, projectId: String!): Article
  updateProject(input: UpdateArticleInput, projectId: ID!): Article
  updateUser(input: UpdateUsertInput, userId: String!): User!
  uploadImage(path: String!): JSONObject
}

type Query {
  getArticle(id: ID!): Article

  """Admin query to get articles"""
  getArticlesAdmin(cursor: String): ArticlesResponse!
  getCurrentUser: User

  """Get all my projects"""
  getMyProjects(cursor: String): ArticlesResponse!

  """Get all published articles"""
  getPublishedArticles(cursor: String): ArticlesResponse!
  getUser(id: ID!): User

  """Get all the articles from a certain user"""
  getUserArticles(cursor: String, userId: String): ArticlesResponse!
  getUsers: [User]!

  """Search articles"""
  searchArticles(cursor: String, input: SearchArticlesInput): ArticlesResponse!
}

enum Role {
  ADMIN
  AUTHOR
}

"""Search input fields"""
input SearchArticlesInput {
  order: SearchOrder!
  orderBy: String!
  search: String!
}

"""Search order"""
enum SearchOrder {
  asc
  desc
}

input UpdateArticleInput {
  content: String!
  description: String!
  lead: String!
  preview: String!
  tags: [String!]
  title: String!
}

"""Update the user information"""
input UpdateUsertInput {
  discord: String!
  email: String!
  github: String!
  name: String!
  role: Role!
}

type User {
  articles: [Article!]
  avatar: String
  email: String!
  id: ID!
  name: String!
  role: Role!
}